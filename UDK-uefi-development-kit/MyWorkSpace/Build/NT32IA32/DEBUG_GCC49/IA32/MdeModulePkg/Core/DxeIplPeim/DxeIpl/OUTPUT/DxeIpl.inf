## @file
#  Last PEIM executed in PEI phase to load DXE Core from a Firmware Volume.
#
#  This module produces a special PPI named the DXE Initial Program Load (IPL)
#  PPI to discover and dispatch the DXE Foundation and components that are
#  needed to run the DXE Foundation.
#
#  Copyright (c) 2006 - 2016, Intel Corporation. All rights reserved.<BR>
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = DxeIpl
  FILE_GUID                  = 86D70125-BAA3-4296-A62F-602BEBBB9081
  MODULE_TYPE                = PEIM
  VERSION_STRING             = 1.0
  ENTRY_POINT                = PeimInitializeDxeIpl
  MODULE_UNI_FILE            = DxeIpl.uni

[Packages.IA32]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec
  Nt32Pkg/Nt32Pkg.dec
  IntelFrameworkModulePkg/IntelFrameworkModulePkg.dec

[Binaries.IA32]
  PE32|DxeIpl.efi
  PEI_DEPEX|DxeIpl.depex

[PatchPcd.IA32]

[Protocols.IA32]

[Ppis.IA32]
  ## PRODUCES
  gEfiDxeIplPpiGuid

  ## PRODUCES
  gEfiPeiDecompressPpiGuid

  ## SOMETIMES_PRODUCES # Not produced on S3 boot path
  gEfiEndOfPeiSignalPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiReadOnlyVariable2PpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiLoadFilePpiGuid

  ## SOMETIMES_CONSUMES # Consumed on S3 boot path
  gEfiPeiS3Resume2PpiGuid

  ## SOMETIMES_CONSUMES # Consumed on recovery boot path
  gEfiPeiRecoveryModulePpiGuid

  ## SOMETIMES_CONSUMES
  ## UNDEFINED # HOB
  gEfiVectorHandoffInfoPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiMemoryDiscoveredPpiGuid

  # PPI ALWAYS_CONSUMED
  gPeiNtThunkPpiGuid

  ## SOMETIMES_PRODUCES
  gEfiPeiFirmwareVolumeInfoPpiGuid

  ## SOMETIMES_PRODUCES
  gEfiPeiFirmwareVolumeInfo2PpiGuid

  ## SOMETIMES_CONSUMES
  gPcdPpiGuid

  ## CONSUMES
  gEfiPeiPcdPpiGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoPpiGuid


[Guids.IA32]
  ## SOMETIMES_CONSUMES ## Variable:L"MemoryTypeInformation"
  ## SOMETIMES_PRODUCES ## HOB
  gEfiMemoryTypeInformationGuid

  ## SOMETIMES_CONSUMES ## GUID
  ## SOMETIMES_CONSUMES   ## UNDEFINED
  gEfiStatusCodeDataTypeDebugGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation StackHob
  gEfiHobMemoryAllocStackGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation BspStoreHob
  gEfiHobMemoryAllocBspStoreGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation ModuleHob
  gEfiHobMemoryAllocModuleGuid

  ## SOMETIMES_PRODUCES ## GUID # FV File System Guid.
  gEfiFirmwareFileSystem2Guid

  ## SOMETIMES_CONSUMES   ## UNDEFINED
  gEfiStatusCodeSpecificDataGuid

  ## PRODUCES  ## UNDEFINED # specifies tiano custom decompress algorithm.
  gTianoCustomDecompressGuid


[PcdEx.IA32]

[LibraryClasses.IA32]
## @LIB_INSTANCES
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  Nt32Pkg/Library/PeiNt32OemHookStatusCodeLib/PeiNt32OemHookStatusCodeLib.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/PeiDxeDebugLibReportStatusCode.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/PeiHobLib/PeiHobLib.inf
#  MdePkg/Library/PeiServicesLib/PeiServicesLib.inf
#  MdeModulePkg/Library/PeiReportStatusCodeLib/PeiReportStatusCodeLib.inf
#  MdePkg/Library/BaseMemoryLibOptPei/BaseMemoryLibOptPei.inf
#  MdePkg/Library/PeiMemoryAllocationLib/PeiMemoryAllocationLib.inf
#  MdePkg/Library/PeiPcdLib/PeiPcdLib.inf
#  MdePkg/Library/PeiServicesTablePointerLib/PeiServicesTablePointerLib.inf
#  MdePkg/Library/PeiExtractGuidedSectionLib/PeiExtractGuidedSectionLib.inf
#  IntelFrameworkModulePkg/Library/BaseUefiTianoCustomDecompressLib/BaseUefiTianoCustomDecompressLib.inf
#  MdePkg/Library/PeimEntryPoint/PeimEntryPoint.inf
#  MdeModulePkg/Library/DebugAgentLibNull/DebugAgentLibNull.inf

[Depex.IA32]
#  (gEfiPeiLoadFilePpiGuid AND gEfiPeiMasterBootModePpiGuid) AND (gEfiPeiPcdPpiGuid)

#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC (EBC is for build only) AARCH64
#
#
# [BootMode]
#  S3_RESUME                        ## SOMETIMES_CONSUMES
#  RECOVERY_FULL                    ## SOMETIMES_CONSUMES
#
#
# [Hob]
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # MEMORY_ALLOCATION_MODULE for DxeCore
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # New Stack HoB
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # Old Stack HOB
#
# [Hob.IPF]
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # MEMORY_ALLOCATION_BSP_STORE
#

[BuildOptions.IA32]
## @AsBuilt
##   GCC:DEBUG_GCC49_IA32_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC49_IA32_ASLDLINK_FLAGS = -nostdlib -n -q --gc-sections -z common-page-size=0x40 --entry ReferenceAcpiTable -u ReferenceAcpiTable -m elf_i386
##   GCC:DEBUG_GCC49_IA32_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC49_IA32_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:DEBUG_GCC49_IA32_GENFW_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC49_IA32_RC_FLAGS = -I binary -O elf32-i386          -B i386    --rename-section .data=.hii
##   GCC:DEBUG_GCC49_IA32_ASM_FLAGS = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -m32 -march=i386
##   GCC:DEBUG_GCC49_IA32_ASL_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_CC_FLAGS = -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -c -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m32 -march=i586 -malign-double -fno-stack-protector -D EFI32 -fno-asynchronous-unwind-tables -Wno-address -Os
##   GCC:DEBUG_GCC49_IA32_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC49_IA32_ASLCC_FLAGS = -x c -m32
##   GCC:DEBUG_GCC49_IA32_DLINK2_FLAGS = --defsym=PECOFF_HEADER_SIZE=0x220 --script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds
##   GCC:DEBUG_GCC49_IA32_DLINK_FLAGS = -nostdlib -n -q --gc-sections -z common-page-size=0x40 --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map -m elf_i386 --oformat=elf32-i386 /EXPORT:InitializeDriver=$(IMAGE_ENTRY_POINT) /BASE:0x10000 /ALIGN:4096 /FILEALIGN:4096 /SUBSYSTEM:CONSOLE
##   GCC:DEBUG_GCC49_IA32_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC49_IA32_ASLPP_FLAGS = -x c -E -P
##   GCC:DEBUG_GCC49_IA32_OBJCOPY_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_APP_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC49_IA32_NASM_FLAGS = -f elf32
