## @file
# PeiMain module is core module in PEI phase.
#
# It takes responsibilities of:
# 1) Initialize memory, PPI, image services etc, to establish PEIM runtime environment.
# 2) Dispatch PEIM from discovered FV.
# 3) Handoff control to DxeIpl to load DXE core and enter DXE phase.
#
# Copyright (c) 2006 - 2015, Intel Corporation. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution. The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = PeiCore
  FILE_GUID                  = 52C05B14-0B98-496c-BC3B-04B50211D680
  MODULE_TYPE                = PEI_CORE
  VERSION_STRING             = 1.0
  ENTRY_POINT                = PeiCore
  MODULE_UNI_FILE            = PeiCore.uni

[Packages.IA32]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec
  Nt32Pkg/Nt32Pkg.dec

[Binaries.IA32]
  PE32|PeiCore.efi

[PatchPcd.IA32]

[Protocols.IA32]

[Ppis.IA32]
  ## SOMETIMES_CONSUMES # PeiReportStatusService is not ready if this PPI doesn't exist
  gEfiPeiStatusCodePpiGuid

  ## SOMETIMES_CONSUMES # PeiResetService is not ready if this PPI doesn't exist
  gEfiPeiResetPpiGuid

  ## CONSUMES
  gEfiDxeIplPpiGuid

  ## PRODUCES
  gEfiPeiMemoryDiscoveredPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiDecompressPpiGuid

  ## SOMETIMES_PRODUCES
  ## NOTIFY
  ## SOMETIMES_PRODUCES # Produce FvInfoPpi if the encapsulated FvImage is found
  gEfiPeiFirmwareVolumeInfoPpiGuid

  ## SOMETIMES_PRODUCES
  ## NOTIFY
  ## SOMETIMES_PRODUCES # Produce FvInfoPpi2 if the encapsulated FvImage is found
  gEfiPeiFirmwareVolumeInfo2PpiGuid

  ## PRODUCES
  ## CONSUMES
  gEfiPeiLoadFilePpiGuid

  ## NOTIFY
  gEfiPeiSecurity2PpiGuid

  ## SOMETIMES_CONSUMES
  gEfiTemporaryRamSupportPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiTemporaryRamDonePpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiReset2PpiGuid

  # PPI ALWAYS_CONSUMED
  gPeiNtThunkPpiGuid

  # PPI ALWAYS_CONSUMED
  gNtPeiLoadFilePpiGuid


[Guids.IA32]
  ## SOMETIMES_CONSUMES   ## File
  gPeiAprioriFileNameGuid

  ## SOMETIMES_PRODUCES ## GUID # FV File System Guid.
  ## PRODUCES   ## UNDEFINED # Install ppi
  ## CONSUMES   ## UNDEFINED # Locate ppi
  gEfiFirmwareFileSystem2Guid

  ## PRODUCES   ## UNDEFINED # Install ppi
  ## CONSUMES   ## UNDEFINED # Locate ppi
  ## CONSUMES   ## GUID      # Used to compare with FV's file system guid and get the FV's file system format
  gEfiFirmwareFileSystem3Guid

  ## SOMETIMES_CONSUMES ## GUID
  ## SOMETIMES_CONSUMES   ## UNDEFINED
  gEfiStatusCodeDataTypeDebugGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation StackHob
  gEfiHobMemoryAllocStackGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation BspStoreHob
  gEfiHobMemoryAllocBspStoreGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation ModuleHob
  gEfiHobMemoryAllocModuleGuid

  ## SOMETIMES_CONSUMES   ## UNDEFINED
  gEfiStatusCodeSpecificDataGuid


[PcdEx.IA32]

[LibraryClasses.IA32]
## @LIB_INSTANCES
#  MdeModulePkg/Library/OemHookStatusCodeLibNull/OemHookStatusCodeLibNull.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/PeiMemoryAllocationLib/PeiMemoryAllocationLib.inf
#  MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/PeiDxeDebugLibReportStatusCode.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/PeiHobLib/PeiHobLib.inf
#  MdePkg/Library/PeiServicesLib/PeiServicesLib.inf
#  MdeModulePkg/Library/PeiReportStatusCodeLib/PeiReportStatusCodeLib.inf
#  MdePkg/Library/BaseMemoryLibOptPei/BaseMemoryLibOptPei.inf
#  MdePkg/Library/PeiServicesTablePointerLib/PeiServicesTablePointerLib.inf
#  Nt32Pkg/Library/PeiNt32PeCoffExtraActionLib/PeiNt32PeCoffExtraActionLib.inf
#  Nt32Pkg/Library/Nt32PeiPeCoffGetEntryPointLib/Nt32PeiPeCoffGetEntryPointLib.inf
#  MdePkg/Library/BasePerformanceLibNull/BasePerformanceLibNull.inf
#  MdePkg/Library/PeiCoreEntryPoint/PeiCoreEntryPoint.inf
#  MdePkg/Library/BaseCacheMaintenanceLib/BaseCacheMaintenanceLib.inf
#  MdePkg/Library/BasePeCoffLib/BasePeCoffLib.inf

[Depex.IA32]


#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC (EBC is for build only)
#
# [BootMode]
# S3_RESUME             ## SOMETIMES_CONSUMES
# [Hob]
# PHIT                  ## PRODUCES
# RESOURCE_DESCRIPTOR   ## SOMETIMES_PRODUCES
# RESOURCE_DESCRIPTOR   ## SOMETIMES_CONSUMES
# MEMORY_ALLOCATION     ## SOMETIMES_CONSUMES
# FIRMWARE_VOLUME       ## SOMETIMES_PRODUCES
# FIRMWARE_VOLUME       ## SOMETIMES_CONSUMES
# MEMORY_ALLOCATION     ## SOMETIMES_PRODUCES
# MEMORY_ALLOCATION     ## PRODUCES # MEMORY_ALLOCATION_STACK
# UNDEFINED             ## PRODUCES # MEMORY_POOL

[BuildOptions.IA32]
## @AsBuilt
##   GCC:DEBUG_GCC49_IA32_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC49_IA32_ASLDLINK_FLAGS = -nostdlib -n -q --gc-sections -z common-page-size=0x40 --entry ReferenceAcpiTable -u ReferenceAcpiTable -m elf_i386
##   GCC:DEBUG_GCC49_IA32_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC49_IA32_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:DEBUG_GCC49_IA32_GENFW_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC49_IA32_RC_FLAGS = -I binary -O elf32-i386          -B i386    --rename-section .data=.hii
##   GCC:DEBUG_GCC49_IA32_ASM_FLAGS = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -m32 -march=i386
##   GCC:DEBUG_GCC49_IA32_ASL_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_CC_FLAGS = -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -c -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m32 -march=i586 -malign-double -fno-stack-protector -D EFI32 -fno-asynchronous-unwind-tables -Wno-address -Os
##   GCC:DEBUG_GCC49_IA32_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC49_IA32_ASLCC_FLAGS = -x c -m32
##   GCC:DEBUG_GCC49_IA32_DLINK2_FLAGS = --defsym=PECOFF_HEADER_SIZE=0x220 --script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds
##   GCC:DEBUG_GCC49_IA32_DLINK_FLAGS = -nostdlib -n -q --gc-sections -z common-page-size=0x40 --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map -m elf_i386 --oformat=elf32-i386 /EXPORT:InitializeDriver=$(IMAGE_ENTRY_POINT) /BASE:0x10000 /ALIGN:4096 /FILEALIGN:4096 /SUBSYSTEM:CONSOLE
##   GCC:DEBUG_GCC49_IA32_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC49_IA32_ASLPP_FLAGS = -x c -E -P
##   GCC:DEBUG_GCC49_IA32_OBJCOPY_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_APP_FLAGS = 
##   GCC:DEBUG_GCC49_IA32_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC49_IA32_NASM_FLAGS = -f elf32
